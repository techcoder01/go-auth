name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    name: Test Go Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install dependencies
        run: go mod download

      - name: Run unit tests
        run: go test -v -coverprofile=coverage.out ./...

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: backend/coverage.out

  test-frontend:
    name: Test Vue Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

      - name: Run lint
        run: npm run lint

  build-backend:
    name: Build Go Backend
    needs: [test-backend]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build
        run: go build -o bin/server ./cmd/server

      - name: Upload backend artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-binary
          path: bin/server

  build-frontend:
    name: Build Vue Frontend
    needs: [test-frontend]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build production
        run: npm run build

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: frontend/dist/**

  deploy:
    name: Deploy to Production
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download backend artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-binary

      - name: Download frontend artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-dist

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Copy files to server
          scp -o StrictHostKeyChecking=no ./server $SERVER_USER@$SERVER_IP:/app/server
          scp -o StrictHostKeyChecking=no -r frontend/dist/* $SERVER_USER@$SERVER_IP:/var/www/html/

          # Restart service
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "sudo systemctl restart myapp"