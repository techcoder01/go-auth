name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    name: Test Go Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install dependencies
        run: go mod download

      - name: Run unit tests
        run: go test -v -coverprofile=coverage.out ./...

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: backend/coverage.out

  test-frontend:
    name: Test Vue Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

      - name: Run lint
        run: npm run lint

  build-backend:
    name: Build Go Backend
    needs: [test-backend]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build
        run: go build -o bin/server ./cmd/server

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-binary
          path: bin/server

  build-frontend:
    name: Build Vue Frontend
    needs: [test-frontend]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build production
        run: npm run build

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/**

  deploy:
    name: Deploy to Production
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy Backend to Render
        run: |
          curl -X POST https://api.render.com/deploy/srv-cvv8ac24d50c73ap8th0 \
            -H 'Authorization: Bearer ${{ secrets.RENDER_API_KEY }}'